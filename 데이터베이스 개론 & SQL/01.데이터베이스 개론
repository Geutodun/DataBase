❑ database (DB) : 전자적으로 저장되고 사용되는 관련있는 데이터들의 조직화된 집합
▪ 관련있는 데이터 : 같은 출처, 목적, 서비스 안에서 생성되는 데이터


❑ database mangement systems (DBMS) : 사용자에거 DB를 정의하고 먼들고 관리하는 기능을 제공하는 소프트웨어 시스템
▪ DB를 정의하다 보면 부가적인 데이터 발생 ➔ metadata


❑ metadata : database를 정의하거나 기술하는 data
▪ catalog라고 부름
▪ ex) 데이터 유형, 구조, 제약 조건, 보안, 저장, 인덱스, 사용자 그룹 등등
▪ metadata 또한 DBMS를 통해 저장/관리된다


❑ database system : database + DBMS + 연관된 applications
▪ 줄여서 database라고도 부름





❑ data models : DB의 구조를 기술하는데 사용될 수 있는 개념들이 모인 집합
▪ DB 구조를 추상화해서 표현할 수 있는 수단을 제공 ( 여러 종류가 있고 추상화 수준과 DB 구조화 방식이 다르다 )
▪ DB에서 읽고 쓰기 위한 기본적인 동작들도 포함
▪ DB 구조 ➔ 데이터 유형, 데이터 관계, 제약 사항 등등


❑ data models 분류
▪ conceptual data models
▪ logical data models
▪ physical data models


❑ conceptual data models : 일반 사용자들이 쉽게 이해할 수 있는 개념들로 이뤄진 모델
▪ 추상화 수준이 가장 높음
▪ 비지니스 요구 사항을 추상화하여 기술할 때 사용


❑ logical data models
▪ 이해하기 어렵지 않으면서도 디테일하게 DB를 구조화 할 수 있는 개념들 제공
▪ 데이터가 멐퓨터에 저장될 때의 구조와 크게 다르지 않게 DB 구조화를 가능하게 함
▪ 특정 DBMS나 storage에 종속되지 않는 수준에서 DB를 구조화할 수 있는 모델


❑ physical data models
▪ 컴퓨터에 데이터가 어떻게 파일 형태로 저장되는지를 기술할 수 있는 수단을 제공
▪ data format, data orderings, access path 등등
▪ access path : 데이터 검색을 빠르게 하기 위한 구조체





❑ database schema
▪ data model을 바탕으로 database의 구조를 기술한 것
▪ schema는 database를 설계할 때 정해지며 한번 정해진 후에는 자주 바뀌지 않는다


❑ database state : 특정 시점에 database에 있는 데이터를 가르키며 snapshot라고 한다 + database에 있는 현재 instanes의 집합
▪ database에 있는 실제 데이터는 꽤 자주 바뀔수 있다.


❑ three-schema architecture : database system을 구축하는 architecture 중의 하나
▪ user application으로 부터 물리적인(physical) database를 분히시키는 목적
▪ 세가지 level이 존재  ➔  각 level마다 schema가 정의되어 있음
▪ 종류 
  • external schemas (or user views) at external (or view) level
  • conceptual schemas at conceptual level
  • internal schemas at internal level
▪ 각 레벨을 독립시켜서 어느 레벨에서의 변화가 상위 레벨에 영향을 주지 않기 위함
▪ 대부분의 DBMS가 three level을 완벽하게 혹은 명시적으로 너누지는 않음
▪ 데이터가 존재하는 곳은 internal level


❑ internal schema : 물리적으로 데이터가 어떻게 저장되는지 physical data model을 통해 표현 (물리적인 저장 장치에 가장 가까움)
▪ data storage, data structure, access path 등등 실체가 있는 내용 기술


❑ external schema : 특정 유저들이 필요로 하는 데이터만 표현 (실제 사용자가 바라보는 schema)
▪ user views, external views 라고도 불림
▪ logical data model을 통해 표현


❑ conceptual schema : 전체 database에 대한 구조를 기술, 물리적인 저장 구조에 관한 내용은 숨김 (internal schema를 한번 추상화 시켜서 표현한 schema)
▪ entities, data types, relationships, user operayions, constraints에 집중
▪ logical data model을 통해 기술





❑ data definition language (DDL) : conceptual schema를 정의하기 위해 사용되는 언어
▪ internal schema까지 정의할 수 있는 경우도 있음


❑ storage definition language (SDL) : internal schema를 정의하는 용도로 사용되는 언어
▪ 요즘(2023년)은 relational DBMS에서는 SDL이 거의 없고 파라미터 등의 설정으로 대체됨


❑ view definition language (VDL) : external schema를 정의하기 위해 사용되는 언어
▪ 대부분의 DBMS에서는 DDL이 VDL 역할까지 수행


❑ data manipulation language (DML) : database에 있는 data를 활용하기 위한 언어
▪ data 추가, 삭제, 수정, 검색 등등의 기능을 제공하는 언어


❑ 통합된 언어 : 오늘날의 DBMS는 DML, VDL, DDL이 따로 존재하기 보다는 통합된 언어로 존재
▪ 대표적인 예가 relational database language : SQL
